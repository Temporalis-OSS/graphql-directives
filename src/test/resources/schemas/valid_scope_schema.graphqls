schema {
    query: ExplicitPublicQueryType
}

type ExplicitPublicQueryType @scoped(scope: PUBLIC) {
    explicitPublic: ExplicitPublic!
    implicitPrivate: ImplicitPrivate!
    explicitPrivate: ExplicitPrivate!
    implicitNonScopedPrivate: ImplicitNonScopedPrivate!

    explicitPublicButExplicitPrivateInQuery: ExplicitPublic! @scoped(scope: PRIVATE)
    implicitPrivateButImplicitPrivateInQuery: ImplicitPrivate! @scoped
    explicitPrivateButExplicitPublicInQuery: ExplicitPrivate! @scoped(scope: PUBLIC)
}

enum AnEnum @scoped(scope: PRIVATE){
    VALUE1 @scoped(scope: PUBLIC)
    VALUE2 @scoped(scope: PUBLIC)
}

type ExplicitPublic @scoped(scope: PUBLIC){
    explicitPublicField: String! @scoped(scope: PUBLIC)
    implicitPublicField: String!
    implicitPrivateField: String! @scoped
    explicitPrivatefield: String! @scoped(scope: PRIVATE)
}

type ImplicitPrivate @scoped {
    explicitPublicField: String! @scoped(scope: PUBLIC)
    implicitPrivateField: String! @scoped
    implicitNonScopedPrivateField: String!
    explicitPrivateField: String! @scoped(scope: PRIVATE)
}

type ExplicitPrivate @scoped(scope: PRIVATE){
    explicitPublicField: String! @scoped(scope: PUBLIC)
    implicitPrivateField: String! @scoped
    implicitNonScopedPrivateField: String!
    explicitPrivateField: String! @scoped(scope: PRIVATE)
}

type ImplicitNonScopedPrivate {
    implicitPrivateField1: String!
    implicitPrivateField2: String!
}


